1. install vite react
2. install tailwind css and configure it
3. create pages and set routes install react-router-dom
4. create header in components folder
5. install npm i flowbite-react for creating header 
it is an tailwind base UI liberary
6. install react-icons for the header
7. create backend seperate folder inside root directory
npm init create api folder keep index.js in that and 
change type to mudule instead of comon js in package jason
8. install express and create server and run in index.js 
using node api/index.js
9. install nodemon and change the scripts in package file
add two scripts one dev and other start one nodemon and other
node, node for deployement and nodemon for development
now run npm run dev.
10. move gitignore from client to root
11. connect to the database install mongoose and create new
project in the mongodb website and create database and connect
through driver to the project,
12. install dotenv in root folder and hide connection string
13. create user model in models folder
14. create test api route, by creating routes, controllers folders
15. create signup api route by creating auth routes, and auth controllers files, and import file like auth controller in the auth route and add auth route in index file
16. install bcrypt js for hashing password and use it inside the signup function inside auth controller
17. add middleware and function to handle the errors, create middleware in the index file and create utils folder and inside that create error file
18. create signup page UI
19. add functionaly of signup page, first track changes in the input by on change event listner than call function called handle change for all inputs same onchange, track changes of each by using its id, created usestate of formdata to track changes, also create onsubmit for form and add proxy in vote config file for adress to be matched, add errors and loadinf=g stats
20. create footer now
21. create signin api route, and set cookie inside browser to checck if the person authenticated or not install jsonwebtoken to authenticate the user, also create jwtsecret key and store in .env
22. create signin page ui now
23. save the response of user infromation from sign in to global state redux, setup redux toolkit
1- Create a Redux Store
2- Provide the Redux Store to React
3- Create a Redux State Slice (userSlice and reducers/functions)
4- Add Slice Reducers to the Store
now import (signinstart, signinsucces, signinfailure) it in signin page, in order to use them use dispatch
22- add redux persist to save info localy. not to lose it on refresh
23-create OAuth jsx file and create api route for google auth to login through google
24- updating header section get the userprofile image
25- create thesme folder and slide inside redux than create themeprovider component and wrap app inside this in main .jsx, transfer this functionality and use inside the header
26- make dashboard private by making new component and wrap dashboard inside this component in the app file
27- sperate tabs from search bar or get it, in dashboard file
28- create UI of sidebar
29- create UI of profile
30- upload image functionality in the profile page (use react circular progress bar package)
31- work on edit/update api route of the user (first check if the person is authenticate or not from cookies) inside varifyUser file and install cookie parser in the backend and initialize the cookie parser in the index file (cookie parser used to extract cookie from the browser)
32- update user profile page and connect to backend need to have form data peice of state to get all the four data and than update it, use onchange in inputs and onsubmit for form, create new reducers in userSlice for update functionality
33- delete user api route
34- delete user account functionality from dashprofile page, onchange on delete account button popup window create, delete user from redux as well, create a model as well for confirm delete and also create reducers for delete
35 - add signout functionality create api route to clear cookie of user and remove from redux as well add this is header and sidedash
36- add admin functionality to user, first add in user model and add isadmin in cookie as well to get informed the browaer that the user is admin so midify signin request
